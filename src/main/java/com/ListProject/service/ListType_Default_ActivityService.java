package com.ListProject.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;



import com.ListProject.domain.core.ListType;

import com.ListProject.domain.core.Master_List;

import com.ListProject.dao.mysql.ListType_Default_ActivityDao;

import com.ListProject.domain.core.GpUser;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("ListType_Default_ActivityService")
public class ListType_Default_ActivityService extends GpBaseService  {

	ListType_Default_ActivityDao ListType_Default_Activity_dao;


	public ListType_Default_ActivityDao get_ListType_Default_Activity_dao() {
		return ListType_Default_Activity_dao;
	}


	@Resource(name="ListType_Default_ActivityDao")
	public void set_ListType_Default_Activity_dao(ListType_Default_ActivityDao ListType_Default_Activity_dao) {
		this.ListType_Default_Activity_dao = ListType_Default_Activity_dao;
	}



	//auths not ready at this time
	public ListType create_listtype(ListType ListType, GpUser user) throws Exception {


		try{
			ListType the_ListType;

			the_ListType = ListType_Default_Activity_dao.create_listtype(ListType, user);

			return the_ListType;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public ListType update_listtype(ListType ListType, GpUser user) throws Exception {


		try{
			ListType the_ListType;

			the_ListType = ListType_Default_Activity_dao.update_listtype(ListType, user);

			return the_ListType;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public ListType listtype_search_for_update(long id, GpUser user) throws Exception {


		try{
			ListType the_ListType;

			the_ListType = ListType_Default_Activity_dao.listtype_search_for_update(id, user);

			return the_ListType;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public String  delete_listtype(long id, GpUser user) throws Exception {


		try{
			String method_return_message;

			method_return_message = ListType_Default_Activity_dao.delete_listtype(id, user);

			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public ArrayList<ListType> get_all_listtype() throws Exception {


		try{
			ArrayList<ListType> ListType_list;

			ListType_list = ListType_Default_Activity_dao.get_all_listtype();

			return ListType_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public ListType get_listtype_by_parent_id(long Master_List_id) throws Exception {


		try{
			ListType the_ListType;

			the_ListType = ListType_Default_Activity_dao.get_listtype_by_parent_id(Master_List_id);

			return the_ListType;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public String  delete_listtype_by_parent_id(long Master_List_id) throws Exception {


		try{
			String method_return_message;

			method_return_message = ListType_Default_Activity_dao.delete_listtype_by_parent_id(Master_List_id);

			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}




}