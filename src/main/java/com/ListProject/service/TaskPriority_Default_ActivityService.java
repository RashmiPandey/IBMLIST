package com.ListProject.service;

import java.util.ArrayList;

import javax.annotation.Resource;
import org.springframework.stereotype.Service;



import com.ListProject.domain.core.TaskPriority;

import com.ListProject.domain.core.Task;

import com.ListProject.dao.mysql.TaskPriority_Default_ActivityDao;

import com.ListProject.domain.core.GpUser;



/**
 *
 * @author Geppetto Generated Code</br>
 * Date Created: </br>
 * @since  </br>
   build:   </p>
 *
 * code was generated by the Geppetto System </br>
 * Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 * The generated code is free to use by anyone</p>
 *
 *
 *
*/
@Service("TaskPriority_Default_ActivityService")
public class TaskPriority_Default_ActivityService extends GpBaseService  {

	TaskPriority_Default_ActivityDao TaskPriority_Default_Activity_dao;


	public TaskPriority_Default_ActivityDao get_TaskPriority_Default_Activity_dao() {
		return TaskPriority_Default_Activity_dao;
	}


	@Resource(name="TaskPriority_Default_ActivityDao")
	public void set_TaskPriority_Default_Activity_dao(TaskPriority_Default_ActivityDao TaskPriority_Default_Activity_dao) {
		this.TaskPriority_Default_Activity_dao = TaskPriority_Default_Activity_dao;
	}



	//auths not ready at this time
	public TaskPriority create_taskpriority(TaskPriority TaskPriority, GpUser user) throws Exception {


		try{
			TaskPriority the_TaskPriority;

			the_TaskPriority = TaskPriority_Default_Activity_dao.create_taskpriority(TaskPriority, user);

			return the_TaskPriority;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public TaskPriority update_taskpriority(TaskPriority TaskPriority, GpUser user) throws Exception {


		try{
			TaskPriority the_TaskPriority;

			the_TaskPriority = TaskPriority_Default_Activity_dao.update_taskpriority(TaskPriority, user);

			return the_TaskPriority;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public TaskPriority taskpriority_search_for_update(long id, GpUser user) throws Exception {


		try{
			TaskPriority the_TaskPriority;

			the_TaskPriority = TaskPriority_Default_Activity_dao.taskpriority_search_for_update(id, user);

			return the_TaskPriority;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public String  delete_taskpriority(long id, GpUser user) throws Exception {


		try{
			String method_return_message;

			method_return_message = TaskPriority_Default_Activity_dao.delete_taskpriority(id, user);

			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public ArrayList<TaskPriority> get_all_taskpriority() throws Exception {


		try{
			ArrayList<TaskPriority> TaskPriority_list;

			TaskPriority_list = TaskPriority_Default_Activity_dao.get_all_taskpriority();

			return TaskPriority_list;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public TaskPriority get_taskpriority_by_parent_id(long Task_id) throws Exception {


		try{
			TaskPriority the_TaskPriority;

			the_TaskPriority = TaskPriority_Default_Activity_dao.get_taskpriority_by_parent_id(Task_id);

			return the_TaskPriority;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}

	//auths not ready at this time
	public String  delete_taskpriority_by_parent_id(long Task_id) throws Exception {


		try{
			String method_return_message;

			method_return_message = TaskPriority_Default_Activity_dao.delete_taskpriority_by_parent_id(Task_id);

			return method_return_message;

		}catch(Exception e){

			System.out.println("ServiceException: " + e.toString());

		}
		return null;



	}




}