package com.ListProject.dao.mysql;

import java.util.ArrayList;

import javax.persistence.EntityManager;
import javax.persistence.PersistenceContext;
import javax.persistence.Query;
import javax.transaction.Transactional;

import org.apache.commons.logging.Log;
import org.apache.commons.logging.LogFactory;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Repository;

import com.ListProject.domain.core.GpUser;

/**
 *
 * @author Geppetto Generated Code</br>
 *         Date Created: </br>
 * @since </br>
 *        build:
 *        </p>
 *
 *        code was generated by the Geppetto System </br>
 *        Gepppetto system Copyright - Geppetto LLC 2014 - 2015</br>
 *        The generated code is free to use by anyone
 *        </p>
 *
 *
 *
 */
@Transactional
@Repository("GpUserDAO")
public class GpUserDAO {

	private Log log = LogFactory.getLog(getClass());

	@Value("${get_all_users.sql}")
	private String get_all_users;

	@PersistenceContext
	EntityManager entityManager;

	// auths not ready at this time
	public ArrayList<GpUser> getallUsers() {

		try {
			Query result = entityManager.createNativeQuery(get_all_users, GpUser.class);
			ArrayList<GpUser> assignto_list = (ArrayList<GpUser>) result.getResultList();
			if (assignto_list.size() < 1) {
				throw new Exception("no data found");
			}
			return (ArrayList<GpUser>) assignto_list;

		} catch (Exception e) {

			new Exception(e.toString()); // this needs to be changed

		}
		return null;
	}

}